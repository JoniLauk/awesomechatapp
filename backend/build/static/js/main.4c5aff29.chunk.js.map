{"version":3,"sources":["context/socket.js","utils/utils.js","components/Nav.js","App.js","components/Home.js","services/userService.js","components/Notification.js","components/ChangePassword.js","components/Settings.js","services/messageService.js","services/roomService.js","components/InfoComponent.js","components/Room.js","components/NewRoom.js","components/Rooms.js","components/Login.js","components/Signup.js","index.js"],"names":["socket","io","connect","SocketContext","React","createContext","setToken","user","window","localStorage","setItem","JSON","stringify","getToken","parse","getItem","token","error","getUser","username","getUserId","id","removeToken","removeItem","setColorScheme","scheme","handleNotification","data","setNot","setNotContent","setTimeout","Nav","navProps","showInfo","setShowInfo","roomName","history","useHistory","goBack","push","goSettings","handleInfoButton","className","onClick","style","visibility","handleShowButtons","App","useState","setRoomName","currentUser","setCurrentUser","myStorage","useEffect","document","documentElement","classList","add","roomProps","Provider","value","path","to","Home","props","url","logIn","a","axios","post","response","signUp","changeUserpassword","put","deleteAccount","userId","console","log","delete","Notification","message","m","map","x","msg","render","ChangePassword","setIsChangePasswordVisible","isChangePasswordVisible","password","setPassword","newPassword","setNewPassword","not","pwIcon","setPWIcon","notContent","handlePassword","event","preventDefault","target","handleNewPassword","handlePasswordChange","type","errors","togglePassword","getElementById","toggleNewPassword","cancelPasswordChange","onSubmit","name","onChange","Settings","setUser","setCurrentTheme","logout","deleteCurrentAccount","confirm","handleTheme","handlePasswordChangeButton","getAllMessagesForRoom","roomId","get","params","headers","authorization","getAll","getRoomName","addNewRoom","newRoomName","InfoComponent","arr","i","testArr","connectedUsers","Room","messages","setMessages","setConnectedUsers","messageContent","setMessageContent","messageItems","setMessageItems","useContext","messagesEndRef","useRef","useParams","handleNewMessages","useCallback","off","handleMessageDelete","filter","_id","getMessages","once","emit","on","scrollToBottom","current","scrollIntoView","behavior","checkIfImageExists","image","Image","src","content","match","checkURL","includes","alt","emitMessageDel","ref","newMessage","ObjectId","toString","room","NewRoom","isNewRoomVisible","setNewRoomVisible","setNewRoomName","handleRoomName","handleNewRoom","cancelNewRoom","placeholder","Rooms","rooms","setRooms","useRouteMatch","location","useLocation","getRooms","newRooms","getRoutes","exact","getNewestMessageForRoom","length","getNewesMessagesDateForRoom","Date","date","toLocaleString","handleNewRoomButton","Login","setUsername","handleLogin","loginUser","resetCreds","href","Signup","handleSignup","ReactDOM","StrictMode","height"],"mappings":"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","file":"static/js/main.4c5aff29.chunk.js","sourcesContent":["import React from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nexport const socket = io.connect('localhost:4000');\r\nexport const SocketContext = React.createContext();\r\n","export const setToken = (user) => {\r\n  window.localStorage.setItem('token', JSON.stringify(user));\r\n};\r\n\r\nexport const getToken = () => {\r\n  try {\r\n    const token = JSON.parse(window.localStorage.getItem('token')).token;\r\n    return token;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getUser = () => {\r\n  try {\r\n    const token = JSON.parse(window.localStorage.getItem('token')).username;\r\n    return token;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getUserId = () => {\r\n  try {\r\n    const token = JSON.parse(window.localStorage.getItem('token')).id;\r\n    return token;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const removeToken = () => {\r\n  window.localStorage.removeItem('token');\r\n};\r\n\r\nexport const setColorScheme = (scheme) => {\r\n  window.localStorage.setItem('currentTheme', scheme);\r\n};\r\n\r\nexport const getColorScheme = () => {\r\n  return window.localStorage.getItem('currentTheme');\r\n};\r\n\r\nexport const handleNotification = (data, setNot, setNotContent) => {\r\n  setNot(true);\r\n  setNotContent(data);\r\n  setTimeout(() => {\r\n    setNotContent('');\r\n    setNot(false);\r\n  }, 2000);\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaChevronLeft, FaCog, FaInfoCircle, FaTimes } from 'react-icons/fa';\r\n\r\nexport const Nav = ({ navProps }) => {\r\n  const { showInfo, setShowInfo, roomName } = navProps;\r\n  const history = useHistory();\r\n\r\n  const goBack = () => {\r\n    history.push('/rooms');\r\n  };\r\n\r\n  const goSettings = () => {\r\n    history.push('/settings');\r\n  };\r\n\r\n  const handleInfoButton = () => {\r\n    setShowInfo(!showInfo);\r\n  };\r\n\r\n  const handleShowButtons = () => {\r\n    switch (roomName) {\r\n      case 'AWESOMECHATAPP':\r\n        return <FaCog className=\"button\" onClick={goSettings} />;\r\n      case 'SETTINGS':\r\n        return <FaTimes className=\"button\" onClick={goBack} />;\r\n      case 'LOGIN':\r\n        return (\r\n          <FaTimes\r\n            className=\"button\"\r\n            onClick={goBack}\r\n            style={{ visibility: 'hidden' }}\r\n          />\r\n        );\r\n      case 'SIGN UP':\r\n        return (\r\n          <FaTimes\r\n            className=\"button\"\r\n            onClick={goBack}\r\n            style={{ visibility: 'hidden' }}\r\n          />\r\n        );\r\n      default:\r\n        if (!showInfo) {\r\n          return <FaInfoCircle className=\"button\" onClick={handleInfoButton} />;\r\n        } else {\r\n          return <FaTimes className=\"button\" onClick={handleInfoButton} />;\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"topBar\">\r\n        <FaChevronLeft className=\"button\" onClick={goBack} />\r\n        <div>{roomName}</div>\r\n        <div>{handleShowButtons()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { Settings, Rooms, Room, Login, Signup } from './index';\r\nimport { SocketContext, socket } from './context/socket';\r\nimport { getUser } from './utils/utils';\r\nimport { Nav } from './components/Nav';\r\nimport './components/stylesheets/app.css';\r\n\r\n/**\r\n * Main component of the app. Renders Router component which handles routing inside the app.\r\n * @returns Router component.\r\n */\r\nexport default function App() {\r\n  const [roomName, setRoomName] = useState('');\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const myStorage = window.localStorage;\r\n\r\n  /**\r\n   * Retrieves selected theme from browsers local-storage.\r\n   */\r\n  useEffect(() => {\r\n    if (!myStorage.getItem('currentTheme')) {\r\n      myStorage.setItem('currentTheme', 'nightly');\r\n    }\r\n    document.documentElement.className = '';\r\n    document.documentElement.classList.add(\r\n      `theme-${myStorage.getItem('currentTheme')}`\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(getUser());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRoomName('AWESOMECHATAPP');\r\n  }, [setRoomName]);\r\n\r\n  const roomProps = {\r\n    setRoomName,\r\n    showInfo,\r\n    setShowInfo,\r\n  };\r\n\r\n  const navProps = {\r\n    roomName,\r\n    setRoomName,\r\n    setShowInfo,\r\n    showInfo,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <Router>\r\n        <Nav navProps={navProps} />\r\n        <Switch>\r\n          <Route path=\"/settings\">\r\n            {currentUser ? (\r\n              <Settings setRoomName={setRoomName} />\r\n            ) : (\r\n              <Redirect to=\"/login\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/rooms/:id\">\r\n            <Room roomProps={roomProps} />\r\n          </Route>\r\n          <Route path=\"/rooms\">\r\n            {currentUser ? (\r\n              <Rooms setRoomName={setRoomName} />\r\n            ) : (\r\n              <Redirect to=\"/login\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login setCurrentUser={setCurrentUser} setRoomName={setRoomName} />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <Signup setRoomName={setRoomName} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {currentUser ? <Redirect to=\"/rooms\" /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Home(props) {\r\n  return <div></div>;\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nlet url = 'http://localhost:4000/api/';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  url = '/api/';\r\n}\r\n\r\nexport const logIn = async (user) => {\r\n  const response = await axios.post(`${url}login`, user);\r\n  return response.data;\r\n};\r\n\r\nexport const signUp = async (user) => {\r\n  const response = await axios.post(`${url}users`, user);\r\n  return response.data;\r\n};\r\n\r\nexport const changeUserpassword = async (user) => {\r\n  const response = await axios.put(`${url}users/`, user);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAccount = async (userId) => {\r\n  console.log(userId);\r\n  const response = await axios.delete(`${url}users/${userId.userId}`);\r\n  return response.data;\r\n};\r\n","import React from 'react';\r\n\r\nexport const Notification = (props) => {\r\n  const { message } = props;\r\n\r\n  /**\r\n   * Handles how notifications are displayed. Notification message can be of type\r\n   * string and a object.\r\n   * @returns unordered list containing notification message content.\r\n   */\r\n  const render = () => {\r\n    if (typeof message.message === 'string') {\r\n      return (\r\n        <ul className=\"notification\">\r\n          <li>{message.message}</li>\r\n        </ul>\r\n      );\r\n    } else if (typeof message.message === 'object') {\r\n      const m = message.message.map((x) => <li key={x.msg}>{x.msg}</li>);\r\n      return <ul className=\"notification\">{m}</ul>;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return render();\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { unmountComponentAtNode, render } from 'react-dom';\r\nimport { getUser, handleNotification } from '../utils/utils';\r\nimport { changeUserpassword } from '../services/userService';\r\nimport { Notification } from './Notification';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\n\r\nexport const ChangePassword = ({\r\n  setIsChangePasswordVisible,\r\n  isChangePasswordVisible,\r\n}) => {\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [user, setUser] = useState(getUser());\r\n  const [not, setNot] = useState(false);\r\n  const [pwIcon, setPWIcon] = useState(false);\r\n  const [newPwIcon, setNewPWIcon] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n\r\n  const handlePassword = (event) => {\r\n    event.preventDefault();\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleNewPassword = (event) => {\r\n    event.preventDefault();\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await changeUserpassword({\r\n        password,\r\n        newPassword,\r\n        user,\r\n      });\r\n      setIsChangePasswordVisible(false);\r\n      setPassword('');\r\n      setNewPassword('');\r\n      handleNotification(\r\n        {\r\n          message: `Password changed successfully.`,\r\n          type: 'success',\r\n        },\r\n        setNot,\r\n        setNotContent\r\n      );\r\n    } catch (error) {\r\n      if (error.response.data.errors) {\r\n        handleNotification(\r\n          {\r\n            message: 'Check old and new password',\r\n            type: 'error',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  function togglePassword() {\r\n    const x = document.getElementById('login-form-username-input');\r\n    if (x.type === 'password') {\r\n      x.type = 'text';\r\n      setPWIcon(true);\r\n    } else {\r\n      x.type = 'password';\r\n      setPWIcon(false);\r\n    }\r\n  }\r\n\r\n  function toggleNewPassword() {\r\n    const x = document.getElementById('newPassword');\r\n    if (x.type === 'password') {\r\n      x.type = 'text';\r\n      setPWIcon(true);\r\n    } else {\r\n      x.type = 'password';\r\n      setPWIcon(false);\r\n    }\r\n  }\r\n\r\n  const cancelPasswordChange = () => {\r\n    setIsChangePasswordVisible(false);\r\n    setPassword('');\r\n    setNewPassword('');\r\n  };\r\n\r\n  const conditionalRender = () => {\r\n    if (isChangePasswordVisible) {\r\n      return (\r\n        <div className=\"changePassword\">\r\n          {not ? <Notification message={notContent}></Notification> : ''}\r\n          <form className=\"changePasswordForm\" onSubmit={handlePasswordChange}>\r\n            <h2>Change password</h2>\r\n            <div className=\"loginFormDiv\">\r\n              <h3>Password</h3>\r\n              <input\r\n                id=\"login-form-username-input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handlePassword}\r\n                value={password}\r\n              />\r\n              {pwIcon ? (\r\n                <FaEyeSlash\r\n                  id=\"pwIcon\"\r\n                  className=\"pwIcon\"\r\n                  onClick={togglePassword}\r\n                />\r\n              ) : (\r\n                <FaEye\r\n                  id=\"pwIcon\"\r\n                  className=\"pwIcon\"\r\n                  onClick={togglePassword}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"loginFormDiv\">\r\n              <h3>New password</h3>\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                id=\"newPassword\"\r\n                onChange={handleNewPassword}\r\n                value={newPassword}\r\n              />\r\n              {pwIcon ? (\r\n                <FaEyeSlash\r\n                  id=\"pwIcon\"\r\n                  className=\"pwIcon\"\r\n                  onClick={toggleNewPassword}\r\n                />\r\n              ) : (\r\n                <FaEye\r\n                  id=\"pwIcon\"\r\n                  className=\"pwIcon\"\r\n                  onClick={toggleNewPassword}\r\n                />\r\n              )}\r\n            </div>\r\n            <input type=\"submit\" value=\"Confirm\" />\r\n          </form>\r\n          <button onClick={cancelPasswordChange}>Cancel</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return conditionalRender();\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, useHistory } from 'react-router-dom';\r\nimport { deleteAccount } from '../services/userService';\r\nimport {\r\n  getUser,\r\n  removeToken,\r\n  getUserId,\r\n  handleNotification,\r\n  setColorScheme,\r\n} from '../utils/utils';\r\nimport { ChangePassword } from './ChangePassword';\r\nimport { Notification } from './Notification';\r\n\r\nfunction Settings({ setRoomName }) {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(getUser());\r\n  const [userId, setUserId] = useState(getUserId());\r\n  const [not, setNot] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n  const myStorage = window.localStorage;\r\n  const [isChangePasswordVisible, setIsChangePasswordVisible] = useState(false);\r\n  const [currentTheme, setCurrentTheme] = useState(\r\n    myStorage.getItem('currentTheme')\r\n  );\r\n\r\n  useEffect(() => {\r\n    setRoomName('SETTINGS');\r\n  });\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    removeToken();\r\n    setRoomName('AWESOMECHATAPP');\r\n    setColorScheme('nightly');\r\n    history.push('/login');\r\n  };\r\n\r\n  const deleteCurrentAccount = async (event) => {\r\n    if (window.confirm('Are you sure you wish to delete this item?')) {\r\n      try {\r\n        await deleteAccount({ userId });\r\n        setUser(null);\r\n        removeToken();\r\n        setColorScheme('nightly');\r\n        history.push('/login');\r\n        handleNotification(\r\n          {\r\n            message: `Account deleted successfully.`,\r\n            type: 'success',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n      } catch (error) {\r\n        if (error.response.data.errors) {\r\n          handleNotification(\r\n            {\r\n              message: 'Error',\r\n              type: 'error',\r\n            },\r\n            setNot,\r\n            setNotContent\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTheme = (event) => {\r\n    myStorage.setItem('currentTheme', event.target.value);\r\n    setCurrentTheme({ value: event.target.value });\r\n    document.documentElement.className = '';\r\n    document.documentElement.classList.add(\r\n      `theme-${myStorage.getItem('currentTheme')}`\r\n    );\r\n  };\r\n\r\n  const handlePasswordChangeButton = () => {\r\n    setIsChangePasswordVisible(true);\r\n  };\r\n\r\n  const conditionalRender = () => {\r\n    if (user) {\r\n      return (\r\n        <div>\r\n          {not ? <Notification message={notContent} /> : ''}\r\n          <div className=\"settings\">\r\n            <h2>Choose a theme</h2>\r\n            <select\r\n              name=\"themes\"\r\n              id=\"themes\"\r\n              value={myStorage.getItem('currentTheme')}\r\n              onChange={handleTheme}\r\n            >\r\n              <option value=\"nightly\">nightly</option>\r\n              <option value=\"brome\">brome</option>\r\n              <option value=\"peachesncream\">peachesncream</option>\r\n            </select>\r\n            <button\r\n              className=\"settingsButton\"\r\n              onClick={handlePasswordChangeButton}\r\n            >\r\n              Change password\r\n            </button>\r\n            <button className=\"settingsButton\" onClick={logout}>\r\n              Logout\r\n            </button>\r\n            <button className=\"settingsButton\" onClick={deleteCurrentAccount}>\r\n              Delete account\r\n            </button>\r\n          </div>\r\n          <ChangePassword\r\n            setIsChangePasswordVisible={setIsChangePasswordVisible}\r\n            isChangePasswordVisible={isChangePasswordVisible}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1>Not logged in</h1>;\r\n    }\r\n  };\r\n\r\n  return conditionalRender();\r\n}\r\n\r\nexport default Settings;\r\n","import axios from 'axios';\r\nimport { getToken } from '../utils/utils';\r\n\r\nlet url = 'http://localhost:4000/api/messages';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  url = '/api/messages';\r\n}\r\n\r\nexport const getAll = async () => {\r\n  const response = await axios.get(url);\r\n  return response.data;\r\n};\r\n\r\nexport const getAllMessagesForRoom = async (roomId) => {\r\n  const response = await axios.get(url, {\r\n    params: { roomId },\r\n    headers: { authorization: `bearer ${getToken()}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const create = async (message) => {\r\n  const response = await axios.post(url, message);\r\n  return response.data;\r\n};\r\n\r\nexport const modify = async (message) => {\r\n  const response = await axios.put(`${url}/${message.id}`, message);\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\nimport { getToken } from '../utils/utils';\r\n\r\nlet url = 'http://localhost:4000/api/rooms';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  url = '/api/rooms';\r\n}\r\n\r\nexport const getAll = async () => {\r\n  const response = await axios.get(url, {\r\n    headers: { authorization: `bearer ${getToken()}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getRoomName = async (id) => {\r\n  const response = await axios.get(`${url}/${id}`, {\r\n    headers: { authorization: `bearer ${getToken()}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const addNewRoom = async (name) => {\r\n  console.log(name);\r\n  const response = await axios.post(\r\n    `${url}/`,\r\n    { name: name.newRoomName },\r\n    {\r\n      headers: { authorization: `bearer ${getToken()}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n","import React from 'react';\r\nimport { FaChevronLeft, FaInfoCircle } from 'react-icons/fa';\r\nimport './stylesheets/infocomponent.css';\r\n\r\n/**\r\n * Displays information about the room which user has selected. Currently only shows\r\n * connected users. Users array and room name are passed via props to this component.\r\n * setShowInfo is state passed from parent. It is used to control visibility of this\r\n * component.\r\n * @param {*} props\r\n * @returns InfoComponent\r\n */\r\nexport const InfoComponent = (props) => {\r\n  const testArr = () => {\r\n    let arr = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      arr.push(i);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const arr = testArr();\r\n\r\n  const { setShowInfo, connectedUsers, roomName } = props;\r\n  console.log(connectedUsers);\r\n  return (\r\n    <div className=\"infoContainer\">\r\n      <h1>Info</h1>\r\n      <h2>Connected users:</h2>\r\n      <ul>\r\n        {connectedUsers.map((x) => (\r\n          <li>{x.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useContext,\r\n  useCallback,\r\n  useRef,\r\n} from 'react';\r\nimport { ObjectId } from 'bson';\r\nimport { getAllMessagesForRoom } from '../services/messageService';\r\nimport { getRoomName } from '../services/roomService';\r\nimport { SocketContext } from '../context/socket';\r\nimport { getUserId, getUser, handleNotification } from '../utils/utils';\r\nimport './stylesheets/room.css';\r\nimport { FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { InfoComponent } from './InfoComponent';\r\nimport { Notification } from './Notification';\r\n\r\n/**\r\n * Room where users can join and send messages to each other. All communications with the server\r\n * are handled via socket.io. Every CRUD-operation is event which is handled on the backend.\r\n * @param {*} param0\r\n * @returns Room component\r\n */\r\nfunction Room({ roomProps }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [connectedUsers, setConnectedUsers] = useState([]);\r\n  const [messageContent, setMessageContent] = useState('');\r\n  const [not, setNot] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n  const [messageItems, setMessageItems] = useState([]);\r\n  const socket = useContext(SocketContext);\r\n  const history = useHistory();\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const { setRoomName, setShowInfo, showInfo } = roomProps;\r\n\r\n  const roomId = useParams();\r\n\r\n  /**\r\n   * Appends new messages to the messages state array.\r\n   */\r\n  const handleNewMessages = useCallback(\r\n    (data) => {\r\n      console.log('hnm');\r\n      setMessages([...messages, data]);\r\n      socket.off('message:received');\r\n    },\r\n    [messages, socket]\r\n  );\r\n\r\n  /**\r\n   * Removes specified message from the messages array.\r\n   */\r\n  const handleMessageDelete = useCallback(\r\n    (data) => {\r\n      setMessages(messages.filter((m) => m._id !== data._id));\r\n      socket.off('message:removed');\r\n    },\r\n    [messages, socket]\r\n  );\r\n\r\n  /**\r\n   * Async wrapper for getAll function which retrieves messages from\r\n   * the API. Adds messages to messages state.\r\n   */\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      const response = await getAllMessagesForRoom(roomId.id);\r\n      const roomName = await getRoomName(roomId.id);\r\n      setRoomName(roomName.name);\r\n      setMessages(response);\r\n      return () => {\r\n        setMessages([]);\r\n      };\r\n    };\r\n\r\n    getMessages();\r\n  }, [roomId, setRoomName]);\r\n\r\n  /**\r\n   * Listens for events fired from the server. Calls either handleNewMessage or\r\n   * handleMessageDelete callback functions based on the event received.\r\n   */\r\n  useEffect(() => {\r\n    socket.off('message:received');\r\n    socket.off('message:removed');\r\n    socket.once('message:received', (data) => handleNewMessages(data));\r\n    socket.once('message:removed', (data) => handleMessageDelete(data));\r\n    return () => {\r\n      socket.off('message:received', handleNewMessages);\r\n      socket.off('message:removed', handleMessageDelete);\r\n    };\r\n  }, [socket, handleNewMessages, handleMessageDelete]);\r\n\r\n  /**\r\n   * When user joins room, fires 'room:join' event which is handled on the server.\r\n   * On user leaving the room, fires 'room:leave' event. Again handled on the server.\r\n   * Listens for 'connected:users' event. When event happens, adds received array of users\r\n   * to connectedUsers state array.\r\n   */\r\n  useEffect(() => {\r\n    socket.emit('room:join', {\r\n      roomId,\r\n      user: getUserId(),\r\n      username: getUser(),\r\n    });\r\n    socket.on('connected:users', (data) => {\r\n      setConnectedUsers(data);\r\n    });\r\n    return () => {\r\n      socket.emit('room:leave', {\r\n        roomId,\r\n        user: getUserId(),\r\n        username: getUser(),\r\n      });\r\n      setConnectedUsers([]);\r\n    };\r\n  }, [socket, roomId]);\r\n\r\n  /**\r\n   * When messages array changes, scroll down.\r\n   */\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 25);\r\n  }, [messages]);\r\n\r\n  /**\r\n   * Send message to backend which handles saving to the database.\r\n   */\r\n  const emitMessage = (event) => {\r\n    event.preventDefault();\r\n    if (messageContent !== '') {\r\n      const newMessage = {\r\n        _id: new ObjectId().toString(),\r\n        roomName: roomId.id,\r\n        room: roomId.id,\r\n        user: getUser(),\r\n        content: messageContent,\r\n      };\r\n\r\n      setMessageContent('');\r\n      socket.emit('message:create', newMessage);\r\n      setTimeout(() => {\r\n        scrollToBottom();\r\n      }, 10);\r\n    } else {\r\n      handleNotification(\r\n        {\r\n          message: 'Message cannot be empty.',\r\n          type: 'error',\r\n        },\r\n        setNot,\r\n        setNotContent\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles form input. Adds form input target value to messageContent state.\r\n   * @param {event} event\r\n   */\r\n  const handleMessageContent = (event) => {\r\n    event.preventDefault();\r\n    setMessageContent(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles going back a page.\r\n   */\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  /**\r\n   * Scrolls to the bottom of the page.\r\n   */\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\r\n  };\r\n\r\n  function checkURL(url) {\r\n    return url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const checkIfImageExists = (message) => {\r\n      const image = new Image();\r\n      image.src = message.content;\r\n\r\n      if (checkURL(message.content) && !image.src.includes('/rooms/')) {\r\n        return <img src={image.src} alt={image.src}></img>;\r\n      }\r\n\r\n      return <p className=\"messageContent\">{message.content}</p>;\r\n    };\r\n\r\n    const emitMessageDel = (x) => {\r\n      socket.emit('message:delete', x);\r\n      setMessages(messages.filter((m) => m._id !== x._id));\r\n    };\r\n\r\n    setMessageItems(\r\n      messages.map((x) => {\r\n        return (\r\n          <li\r\n            className={x.user === getUser() ? 'sentMessage' : 'receivedMessage'}\r\n            key={x._id}\r\n          >\r\n            <div className=\"messageMenu\" onClick={() => emitMessageDel(x)}>\r\n              <FaTrashAlt />\r\n            </div>\r\n            <div className=\"fromUser\">\r\n              {x.user === getUser() ? '' : <p className=\"userName\">{x.user}</p>}\r\n              {checkIfImageExists(x)}\r\n            </div>\r\n          </li>\r\n        );\r\n      })\r\n    );\r\n  }, [messages, socket]);\r\n\r\n  return (\r\n    <div className=\"roomViewContainer\">\r\n      <div className=\"room\">\r\n        <ul className=\"chat\">\r\n          {messageItems}\r\n          <div ref={messagesEndRef} />\r\n        </ul>\r\n        <form className=\"submitMessageForm\" onSubmit={emitMessage}>\r\n          <input onChange={handleMessageContent} value={messageContent}></input>\r\n          <button className=\"submitMessage\" type=\"submit\">\r\n            <FaPlus />\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {showInfo ? (\r\n        <InfoComponent\r\n          roomName={roomId}\r\n          connectedUsers={connectedUsers}\r\n          setShowInfo={setShowInfo}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n      {not ? <Notification message={notContent}></Notification> : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { unmountComponentAtNode, render } from 'react-dom';\r\nimport { getUser, handleNotification } from '../utils/utils';\r\nimport { addNewRoom } from '../services/roomService';\r\nimport { Notification } from './Notification';\r\n\r\nexport const NewRoom = ({ isNewRoomVisible, setNewRoomVisible }) => {\r\n  const [not, setNot] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n  const [newRoomName, setNewRoomName] = useState('');\r\n\r\n  const handleRoomName = (event) => {\r\n    event.preventDefault();\r\n    setNewRoomName(event.target.value);\r\n  };\r\n\r\n  const handleNewRoom = async (event) => {\r\n    event.preventDefault();\r\n    if (newRoomName !== '') {\r\n      try {\r\n        await addNewRoom({\r\n          newRoomName,\r\n        });\r\n        setNewRoomVisible(false);\r\n        setNewRoomName('');\r\n        handleNotification(\r\n          {\r\n            message: `Room added successfully.`,\r\n            type: 'success',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n      } catch (error) {\r\n        if (error.response.data.errors) {\r\n          console.log(error);\r\n          handleNotification(\r\n            {\r\n              message: 'Name is required',\r\n              type: 'error',\r\n            },\r\n            setNot,\r\n            setNotContent\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      handleNotification(\r\n        {\r\n          message: 'Name is required',\r\n          type: 'error',\r\n        },\r\n        setNot,\r\n        setNotContent\r\n      );\r\n    }\r\n  };\r\n\r\n  const cancelNewRoom = () => {\r\n    setNewRoomVisible(false);\r\n    setNewRoomName('');\r\n  };\r\n\r\n  const conditionalRender = () => {\r\n    if (isNewRoomVisible) {\r\n      return (\r\n        <div className=\"addNewRoom\">\r\n          <form className=\"newRoomForm\" onSubmit={handleNewRoom}>\r\n            <div className=\"loginFormDiv\">\r\n              <input\r\n                id=\"login-form-username-input\"\r\n                type=\"name\"\r\n                name=\"newRoomName\"\r\n                onChange={handleRoomName}\r\n                value={newRoomName}\r\n                placeholder=\"name\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"Confirm\" />\r\n          </form>\r\n          <button onClick={cancelNewRoom}>Cancel</button>\r\n          {not ? <Notification message={notContent}></Notification> : ''}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return conditionalRender();\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport Room from './Room';\r\nimport { getUser } from '../utils/utils';\r\nimport { getAll } from '../services/roomService';\r\nimport './stylesheets/rooms.css';\r\nimport { NewRoom } from './NewRoom';\r\n\r\nfunction Rooms({ socket, handleNotification, setRoomName }) {\r\n  const [rooms, setRooms] = useState([]);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [isNewRoomVisible, setNewRoomVisible] = useState(false);\r\n\r\n  const getRooms = async () => {\r\n    const newRooms = await getAll();\r\n    setRooms(newRooms);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRoomName('AWESOMECHATAPP');\r\n    getRooms();\r\n  }, [location, setRoomName]);\r\n\r\n  const getRoutes = rooms.map((x) => (\r\n    <Route key={x.id} exact path={`${match.url}/${x.id}`}>\r\n      <Room\r\n        roomName={x.name}\r\n        socket={socket}\r\n        handleNotification={handleNotification}\r\n        roomId={x.id}\r\n      />\r\n    </Route>\r\n  ));\r\n\r\n  const getNewestMessageForRoom = (room) => {\r\n    if (room.messages.length > 0)\r\n      return room.messages[room.messages.length - 1].content;\r\n    else return '';\r\n  };\r\n\r\n  const getNewesMessagesDateForRoom = (room) => {\r\n    if (room.messages.length > 0) {\r\n      const date = new Date(room.messages[room.messages.length - 1].date);\r\n      return date.toLocaleString();\r\n    } else return '';\r\n  };\r\n\r\n  const handleNewRoomButton = async (event) => {\r\n    setNewRoomVisible(true);\r\n\r\n    //await addNewRoom('asdf');\r\n    //const newRooms = await getAll();\r\n    //setRooms(newRooms);\r\n  };\r\n\r\n  const conditionalRender = () => {\r\n    if (getUser()) {\r\n      return (\r\n        <div className=\"roomListContainer\">\r\n          <ul className=\"roomList\">\r\n            {rooms.map((room) => (\r\n              <Link\r\n                className=\"roomListItem\"\r\n                to={`${match.url}/${room.id}`}\r\n                key={room.id}\r\n                onClick={() => setRoomName(room.name)}\r\n              >\r\n                <div className=\"nameMessage\">\r\n                  <h2 className=\"roomLink\" to={`${match.url}/${room.id}`}>\r\n                    {room.name}\r\n                  </h2>\r\n                </div>\r\n                <div className=\"iconTime\">\r\n                  <p className=\"lastMessage\">{getNewestMessageForRoom(room)}</p>\r\n                  <p>{getNewesMessagesDateForRoom(room)}</p>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n          <div className=\"newRoomButton\">\r\n            <button className=\"newRoom\" onClick={handleNewRoomButton}>\r\n              New Room\r\n            </button>\r\n          </div>\r\n          <Switch>{getRoutes}</Switch>\r\n          <NewRoom\r\n            isNewRoomVisible={isNewRoomVisible}\r\n            setNewRoomVisible={setNewRoomVisible}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Not logged in</h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return conditionalRender();\r\n}\r\n\r\nexport default Rooms;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logIn } from '../services/userService';\r\nimport { setToken, getUser, handleNotification } from '../utils/utils';\r\nimport { Notification } from './Notification';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport './stylesheets/login.css';\r\n\r\nfunction Login({ setCurrentUser, setRoomName }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [not, setNot] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n  const [pwIcon, setPWIcon] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setRoomName('LOGIN');\r\n  });\r\n\r\n  /**\r\n   * Hanldes username field in the login form. Adds username\r\n   * to username state object.\r\n   * @param {*} event onChange event\r\n   */\r\n  const handleUsername = (event) => {\r\n    event.preventDefault();\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  /**\r\n   * Hanles password field in the login form. Adds password\r\n   * to password state object.\r\n   * @param {*} event\r\n   */\r\n  const handlePassword = (event) => {\r\n    event.preventDefault();\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  function togglePassword() {\r\n    const x = document.getElementById('password');\r\n    if (x.type === 'password') {\r\n      x.type = 'text';\r\n      setPWIcon(true);\r\n    } else {\r\n      x.type = 'password';\r\n      setPWIcon(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login forms submit action. Logs user in based on the credentials\r\n   * provided.\r\n   * @param {*} event\r\n   */\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const loginUser = await logIn({ username, password });\r\n      setToken(loginUser);\r\n      setCurrentUser(loginUser);\r\n      resetCreds();\r\n      history.push('/rooms');\r\n    } catch (error) {\r\n      if (error.response) {\r\n        handleNotification(\r\n          {\r\n            message: error.response.data.error,\r\n            type: 'error',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n      }\r\n      resetCreds();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset input fields.\r\n   */\r\n  const resetCreds = () => {\r\n    setPassword('');\r\n    setUsername('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {not ? <Notification message={notContent}></Notification> : ''}\r\n      <div>\r\n        <form className=\"loginForm\" onSubmit={handleLogin}>\r\n          <h1>AWESOMECHATAPP</h1>\r\n          <div className=\"loginFormDiv\">\r\n            <h3>Name</h3>\r\n            <input\r\n              id=\"login-form-username-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleUsername}\r\n              value={username}\r\n            />\r\n          </div>\r\n          <div className=\"loginFormDiv\">\r\n            <h3>Password</h3>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={handlePassword}\r\n              value={password}\r\n            />\r\n            {pwIcon ? (\r\n              <FaEyeSlash\r\n                id=\"pwIcon\"\r\n                className=\"pwIcon\"\r\n                onClick={togglePassword}\r\n              />\r\n            ) : (\r\n              <FaEye id=\"pwIcon\" className=\"pwIcon\" onClick={togglePassword} />\r\n            )}\r\n          </div>\r\n          <div className=\"loginFormSubmit\">\r\n            <input type=\"submit\" value=\"LOGIN\" />\r\n            <div className=\"formInstructions\">\r\n              <p>Don’t have account yet?</p>\r\n              <a className=\"formLink\" href=\"/signup\">\r\n                Sign up now!\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { signUp } from '../services/userService';\r\nimport { setToken, handleNotification } from '../utils/utils';\r\nimport { Notification } from './Notification';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\n\r\nfunction Signup({ setRoomName }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [not, setNot] = useState(false);\r\n  const [notContent, setNotContent] = useState('');\r\n  const [pwIcon, setPWIcon] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setRoomName('SIGN UP');\r\n  });\r\n\r\n  const handleUsername = (event) => {\r\n    event.preventDefault();\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePassword = (event) => {\r\n    event.preventDefault();\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  function togglePassword() {\r\n    const x = document.getElementById('password');\r\n    if (x.type === 'password') {\r\n      x.type = 'text';\r\n      setPWIcon(true);\r\n    } else {\r\n      x.type = 'password';\r\n      setPWIcon(false);\r\n    }\r\n  }\r\n\r\n  const handleSignup = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await signUp({ username, password });\r\n      setToken(user);\r\n      handleNotification(\r\n        {\r\n          message: `${username} created successfully.`,\r\n          type: 'success',\r\n        },\r\n        setNot,\r\n        setNotContent\r\n      );\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (err) {\r\n      if (err.response.data.error) {\r\n        handleNotification(\r\n          {\r\n            message: err.response.data.error,\r\n            type: 'error',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n        setPassword('');\r\n      } else {\r\n        handleNotification(\r\n          {\r\n            message: err.response.data.errors,\r\n            type: 'error',\r\n          },\r\n          setNot,\r\n          setNotContent\r\n        );\r\n        setPassword('');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {not ? <Notification message={notContent} /> : ''}\r\n      <div>\r\n        <form className=\"loginForm\" onSubmit={handleSignup}>\r\n          <h1>AWESOMECHATAPP</h1>\r\n          <div className=\"loginFormDiv\">\r\n            <h3>Name</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleUsername}\r\n              value={username}\r\n            />\r\n          </div>\r\n          <div className=\"loginFormDiv\">\r\n            <h3>Password</h3>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={handlePassword}\r\n              value={password}\r\n            />\r\n            {pwIcon ? (\r\n              <FaEyeSlash\r\n                id=\"pwIcon\"\r\n                className=\"pwIcon\"\r\n                onClick={togglePassword}\r\n              />\r\n            ) : (\r\n              <FaEye id=\"pwIcon\" className=\"pwIcon\" onClick={togglePassword} />\r\n            )}\r\n          </div>\r\n          <div className=\"loginFormSubmit\">\r\n            <input type=\"submit\" value=\"SIGNUP\" />\r\n            <div className=\"formInstructions\">\r\n              <p>Already have an account?</p>\r\n              <a className=\"formLink\" href=\"/login\">\r\n                Log in!\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nexport { default as Home } from './components/Home';\r\nexport { default as Settings } from './components/Settings';\r\nexport { default as Rooms } from './components/Rooms';\r\nexport { default as Room } from './components/Room';\r\nexport { default as Login } from './components/Login';\r\nexport { default as Signup } from './components/Signup';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App style={{ height: '100%' }} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}